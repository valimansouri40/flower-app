{"version":3,"sources":["continar/auth/auth.css","continar/auth/auth.js"],"names":["module","exports","connect","state","loading","auth","token","user","get","dispatch","onauth","email","password","name","passwordConfirm","is","action","props","useState","issineup","setsineup","authform","setauthform","anabel","setanabel","useEffect","elementtype","type","placeholder","elementvalid","require","value","isvalid","touch","maxlength","minlength","isEmail","ordervalidation","rules","valid","required","trim","length","test","isNumeric","pusher","key","push","id","ctf","validation","classes","auth_input","authset","load","className","sineup","disabled","onClick","formis","form","map","onChange","event","inputkey","updatearr","updateObject","target","validi","changrhandler","e"],"mappings":"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","file":"static/js/5.79526528.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"auth_auth__13Zh\",\"form\":\"auth_form_ZgIuO\",\"auth_input\":\"auth_auth_input_25lHC\",\"sinein\":\"auth_sinein_ms6e5\",\"sineup\":\"auth_sineup_3m6uz\",\"valid\":\"auth_valid_r7fty\"};","import React,{useState,useEffect} from 'react';\r\nimport classes from './auth.css';\r\nimport {updateObject} from '../../store/action/spread';\r\nimport * as action from '../../store/action/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport { showAlert } from '../../store/action/Alert';\r\nconst Auth=(props)=>{\r\n    const [issineup, setsineup]=useState(false);\r\n    const [authform, setauthform]=useState({\r\n       \r\n        \r\n    });\r\n    const [anabel, setanabel]=useState(false)\r\n\r\nuseEffect(()=>{\r\n        \r\n        if(issineup){\r\n           setauthform({\r\n            name:{\r\n                elementtype:{\r\n                    type:'text',\r\n                    placeholder: 'name'\r\n                },\r\n                elementvalid:{\r\n                    require:true,\r\n                    \r\n                },\r\n                value:'',\r\n                isvalid: false,\r\n                touch:false\r\n            },\r\n            email:{\r\n                elementtype:{\r\n                    type:'email',\r\n                    placeholder: 'email'\r\n                },\r\n                elementvalid:{\r\n                    require:true,\r\n                    maxlength:40,\r\n                    minlength: 9,\r\n                    isEmail:true\r\n                },\r\n                value:'',\r\n                isvalid: false,\r\n                touch:false\r\n            },\r\n            password:{\r\n                elementtype:{\r\n                    type:'password',\r\n                    placeholder: 'password'\r\n                },\r\n                elementvalid:{\r\n                    require:true,\r\n                    maxlength:40,\r\n                    minlength: 6,\r\n                   \r\n                },\r\n                value:'',\r\n                isvalid: false,\r\n                touch:false\r\n            },\r\n            passwordConfirm:{\r\n                elementtype:{\r\n                    type:'password',\r\n                    placeholder: 'passwordConfirm'\r\n                },\r\n                elementvalid:{\r\n                    require:true,\r\n                    maxlength:40,\r\n                    minlength: 6,\r\n                   \r\n                },\r\n                value:'',\r\n                isvalid: false,\r\n                touch:false\r\n            }, \r\n        })\r\n        }else{\r\n            setauthform({\r\n                name:{\r\n                    elementtype:{\r\n                        type:'text',\r\n                        placeholder: 'name'\r\n                    },\r\n                    elementvalid:{\r\n                        require:true,\r\n                        \r\n                    },\r\n                    value:'',\r\n                    isvalid: false,\r\n                    touch:false\r\n                },\r\n                email:{\r\n                    elementtype:{\r\n                        type:'email',\r\n                        placeholder: 'email'\r\n                    },\r\n                    elementvalid:{\r\n                        require:true,\r\n                        maxlength:40,\r\n                        minlength: 9,\r\n                        isEmail:true\r\n                    },\r\n                    value:'',\r\n                    isvalid: false,\r\n                    touch:false\r\n                },\r\n                password:{\r\n                    elementtype:{\r\n                        type:'password',\r\n                        placeholder: 'password'\r\n                    },\r\n                    elementvalid:{\r\n                        require:true,\r\n                        maxlength:40,\r\n                        minlength: 6,\r\n                       \r\n                    },\r\n                    value:'',\r\n                    isvalid: false,\r\n                    touch:false\r\n                },\r\n            })\r\n        }\r\n    },[issineup, props.token])\r\n    const changrhandler=(event, inputkey)=>{\r\n        const updatearr= updateObject(authform,{\r\n            [inputkey]:updateObject(authform[inputkey],{\r\n                value: event.target.value,\r\n                isvalid: ordervalidation(event.target.value, authform[inputkey].elementvalid),\r\n                touch:true,\r\n               \r\n            })\r\n        })\r\n        setauthform(updatearr)\r\n        let validi=true;\r\n        for(let key in authform){\r\n            validi= authform[key].isvalid && validi\r\n        }\r\n        setanabel(validi)\r\n    }\r\n  const  ordervalidation = (value , rules)=>{\r\n        let valid  = true;\r\n        if(!rules){\r\n            return true;\r\n        }\r\n        if(rules.required){\r\n            valid = value.trim() !== '' && valid;\r\n        }\r\n        if(rules.maxlength){\r\n            valid = value.length <= rules.maxlength && valid;\r\n        }\r\n        if(rules.minlength){\r\n            valid = value.length >= rules.minlength && valid;\r\n        }\r\n        \r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        valid = pattern.test(value) && valid\r\n    }\r\n    \r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        valid = pattern.test(value) && valid\r\n    }\r\n       return valid;\r\n    }\r\n    \r\n    const pusher=[];\r\n    for(let key in authform){\r\n        pusher.push({\r\n            id:key,\r\n            ctf:authform[key],\r\n        \r\n        })\r\n    }\r\n    const validation=[classes.auth_input]\r\n    if(authform.isvalid && authform.touch){\r\n        validation.push(classes.valid)\r\n    }\r\n    const authset=()=>{\r\n        \r\n        props.onauth(authform.email.value, authform.password.value, authform.name.value,issineup?authform.passwordConfirm.value:null, issineup);\r\n        // if(props.user){\r\n        //     showAlert('success', 'success authentication')\r\n        //     window.location.reload();\r\n        // }\r\n       \r\n       \r\n    }\r\n    const issineuphandller=()=>{\r\n        setsineup(e=>{\r\n            return !e})\r\n    }\r\n   \r\n    let load= <button className={classes.sineup} disabled={!anabel} onClick={authset}>اهراز هویت</button>;\r\n    if(props.loading){\r\n        load=<button className={classes.sineup} disabled={!anabel} onClick={authset}>اهراز هویت</button>;\r\n    }\r\n    const formis=(<div className={classes.form}>\r\n    {pusher.map(is=>(\r\n        \r\n        <input className={[is.ctf.isvalid?classes.auth_input: classes.valid && !is.ctf.touch?classes.auth_input : classes.valid]}\r\n         key={is.id} {...is.ctf.elementtype}  {...is.ctf.value} onChange={(event)=>changrhandler(event, is.id)}/>\r\n    ))}\r\n    {load}\r\n    </div>);\r\n   \r\n    return(\r\n        <div className={classes.auth} >\r\n            \r\n            {!issineup?formis:null}\r\n            <button className={classes.sineup} \r\n             onClick={issineuphandller}>{!issineup?'ساخت حساب': 'ورود به حساب' }</button>\r\n            {issineup?formis:null}\r\n        </div>\r\n    );\r\n}\r\nconst mapstatetoprops =state=>{\r\n    return{\r\n        loading:state.auth.loading,\r\n        token: state.auth.token,\r\n        user:state.get.user\r\n    }\r\n}\r\nconst mapdispatchtoprops=dispatch=>{\r\n    return{\r\n        onauth: (email,password,name,passwordConfirm,is)=>dispatch(action.authinit(email,password,name,passwordConfirm,is)),\r\n    }\r\n}\r\nexport default connect(mapstatetoprops,mapdispatchtoprops)(Auth);"],"sourceRoot":""}