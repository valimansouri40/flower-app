{"version":3,"sources":["components/buildPost/buildPost.css","components/buildPost/buildPost.js"],"names":["module","exports","connect","state","newPost","newPosts","dispatch","newpostinit","data","action","getpost","props","useState","imgFlower","setimg","name","elementtype","type","placeholder","elementvalid","require","maxlength","minlength","value","isvalid","touch","describtion","price","isNumeric","authform","setauthform","anabel","setanabel","ordervalidation","rules","valid","required","trim","length","isEmail","test","pusher","key","push","id","ctf","validation","classes","auth_input","submithandller","a","formdt","FormData","append","errormassage","err","order","style","textAlign","width","color","formis","className","form","map","is","onChange","event","inputkey","updatearr","updateObject","target","validi","changrhandler","for","label_photo","files","display","overflow","onClick","disabled","sineup","auth","minHeight","lay"],"mappings":"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","file":"static/js/4.6f65290a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"buildPost_auth_10Bga\",\"lay\":\"buildPost_lay_2itAk\",\"form\":\"buildPost_form_2vSoC\",\"auth_input\":\"buildPost_auth_input_138rg\",\"sineup\":\"buildPost_sineup_b-e8G\",\"valid\":\"buildPost_valid_1mv3w\",\"label_photo\":\"buildPost_label_photo_aX1Vv\"};","import React,{useState} from 'react';\r\nimport classes from './buildPost.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Layout from '../../continar/Layout/Layout';\r\nimport {updateObject} from '../../store/action/spread'\r\nimport *  as action from '../../store/action/index';\r\nconst BuildPost=(props)=>{\r\n    const [imgFlower, setimg]= useState();\r\n    const [authform, setauthform]=useState({\r\n        name:{\r\n            elementtype:{\r\n                type:'name',\r\n                placeholder: 'name'\r\n            },\r\n            elementvalid:{\r\n                require:true,\r\n                maxlength:20,\r\n                minlength: 2\r\n            },\r\n            value:'',\r\n            isvalid: false,\r\n            touch:false\r\n        },\r\n        describtion:{\r\n            elementtype:{\r\n                type:'text',\r\n                placeholder: 'describtion'\r\n            },\r\n            elementvalid:{\r\n                require:true,\r\n                \r\n                minlength: 6\r\n            },\r\n            value:'',\r\n            isvalid: false,\r\n            touch:false\r\n        },\r\n        \r\n        price:{\r\n            elementtype:{\r\n                type:'text',\r\n                placeholder: 'price'\r\n            },\r\n            elementvalid:{\r\n                require:true,\r\n                maxlength:25,\r\n                minlength: 4,\r\n                isNumeric:true,\r\n            },\r\n            value:'',\r\n            isvalid: false,\r\n            touch:false\r\n        },\r\n      \r\n        \r\n    });\r\n    const [anabel, setanabel]=useState(false)\r\n   \r\n    const changrhandler=(event, inputkey)=>{\r\n        const updatearr= updateObject(authform,{\r\n            [inputkey]:updateObject(authform[inputkey],{\r\n                value: event.target.value,\r\n                isvalid: ordervalidation(event.target.value, authform[inputkey].elementvalid),\r\n                touch:true,\r\n            })\r\n        })\r\n      \r\n        \r\n        setauthform(updatearr)\r\n        let validi=true;\r\n        for(let key in authform){\r\n            validi= authform[key].isvalid && validi\r\n        }\r\n        setanabel(validi)\r\n    }\r\n  const  ordervalidation = (value , rules)=>{\r\n        let valid  = true;\r\n        if(!rules){\r\n            return true;\r\n        }\r\n        if(rules.required){\r\n            valid = value.trim() !== '' && valid;\r\n        }\r\n        if(rules.maxlength){\r\n            valid = value.length <= rules.maxlength && valid;\r\n        }\r\n        if(rules.minlength){\r\n            valid = value.length >= rules.minlength && valid;\r\n        }\r\n        \r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        valid = pattern.test(value) && valid\r\n    }\r\n    \r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        valid = pattern.test(value) && valid\r\n    }\r\n       return valid;\r\n    }\r\n    //const [issineup, setsineup]=useState(false);\r\n    const pusher=[];\r\n    for(let key in authform){\r\n        pusher.push({\r\n            id:key,\r\n            ctf:authform[key],\r\n        \r\n        })\r\n    }\r\n    const validation=[classes.auth_input]\r\n    if(authform.isvalid && authform.touch){\r\n        validation.push(classes.valid)\r\n    }\r\n        \r\n        \r\n    const submithandller=async()=>{\r\n        \r\n        const formdt= new FormData();\r\n        formdt.append('imageCover', authform.describtion.value)\r\n        formdt.append('name', authform.name.value)\r\n        formdt.append('price', authform.price.value)\r\n        formdt.append('photo', imgFlower)\r\n        \r\n        props.newpostinit(formdt);\r\n        \r\n     \r\n    }\r\n   \r\n    let errormassage= null;\r\n    if(props.err && props.order){\r\n        errormassage= <p style={{textAlign: 'center',\r\n    width: '100%',color: 'red'}}>عملیات انجام نشد</p>\r\n    }\r\n    \r\n    const photohandller=(event)=>{\r\n        \r\n        setimg(event.target.files[0])\r\n        \r\n    }\r\n    \r\n    const formis=(<div className={classes.form}>\r\n    {pusher.map(is=>(\r\n        \r\n        <input className={[is.ctf.isvalid?classes.auth_input: classes.valid && !is.ctf.touch?classes.auth_input : classes.valid]}\r\n         key={is.id} {...is.ctf.elementtype}  {...is.ctf.value} onChange={(event)=>changrhandler(event, is.id)}/>\r\n    ))}\r\n    <label for='photo' className={classes.label_photo}> {imgFlower?\"change photo\":\"select photo\"}</label>\r\n    <input type='file' onChange={photohandller} style={{display:'none', overflow:'hidden'}} name='photo' id='photo'/>\r\n    <button onClick={submithandller} disabled={!anabel} className={classes.sineup}  >ثبت</button></div>);\r\n   \r\n    return(\r\n        <div className={classes.auth} style={{minHeight:\"100vh\"}}>\r\n            <Layout></Layout>\r\n           <div className={classes.lay}>\r\n           {formis}\r\n            {errormassage}\r\n               </div> \r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        newPost:state.newPost.newPosts \r\n    }\r\n}\r\nconst MapDispatchToProps=dispatch=>{\r\n    return{\r\n        newpostinit: (data)=>dispatch(action.initbuldpost(data)),\r\n        getpost: ()=> dispatch(action.getdatainit())\r\n    }\r\n}\r\nexport default connect(mapStateToProps,MapDispatchToProps)(BuildPost);"],"sourceRoot":""}